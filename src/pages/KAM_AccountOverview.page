<apex:page showHeader="false" docType="html-5.0" controller="KMA_PDFViewCntl" id="thePage">
    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" lang="en">
        
        <head>
            <meta charset="utf-8" />
            <meta http-equiv="x-ua-compatible" content="ie=edge" />
            <title>Account Plan</title>
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <apex:slds />
            <apex:includeLightning />
            
            <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.2/jspdf.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/html2canvas@1.0.0-rc.5/dist/html2canvas.min.js"></script>
            <style>
            	.slds-spinner_container {
                    position : fixed !important;
                }
            	.button-container {
                	text-align : right;
                    padding : 1em;
                }
            </style>
  
        </head>
        <body>
            <div id="spinner" class="slds-spinner_container" ><!--slds-is-relative-->
                <div role="status" class="slds-spinner slds-spinner--large slds-spinner--brand">
                    <div class="slds-spinner__dot-a"></div>
                    <div class="slds-spinner__dot-b"></div>
                </div>
            </div>
            <div class="button-container">	
            	<input type="button" value="Download" id="btnPrint" class="slds-button slds-button_neutral" onclick="getPDF()"/><!--takeshot getPDFFileButton-->
            </div>
            <div id="output"></div>
            
            <div id="lightnigCompContainer">
            </div>
            <script>
             function takeshot() {
                let div =
                    document.getElementById('lightnigCompContainer');
                html2canvas(div).then(
                    function (canvas) {
                        document
                        .getElementById('output')
                        .appendChild(canvas);
                    })
            }
            
            let accountId = '{!$CurrentPage.parameters.accountId}';
			let accountPlanId = '{!$CurrentPage.parameters.accountPlanId}';

            let planName = '{!$CurrentPage.parameters.planName}';
            let planBu = '{!$CurrentPage.parameters.planBu}';
            let planYear = '{!$CurrentPage.parameters.planYear}';
            let planType = '{!$CurrentPage.parameters.planType}';

            let fileName = '';
            if (planName) {
                fileName += planName;
            }
            if (planType) {
                fileName += '_' + planType;
            }
            if (planBu) {
                fileName += '_' + planBu;
            }
            if (planYear) {
                fileName += '_' + planYear;
            }
            
            if (!fileName) {
                fileName = 'Account_Plan_' + accountPlanId;
            }

            if (!accountPlanId || !accountId) {
                hideSpinner ();
                //show error message    
            } else {
                $Lightning.use("c:Demo", function() {
                    $Lightning.createComponent(
                        "c:KAM_AccountPlanPop",
                        {AccountPlanId:accountPlanId,
                         AccountId: accountId},
                        "lightnigCompContainer",
                        function(cmp) {
               				hideSpinner (); 
                        });
                });
            }
            
            function hideSpinner () {
                $( "#spinner" ).toggleClass( 'slds-hide', true );
            }
            function showSpinner () {
            	$( "#spinner" ).toggleClass( 'slds-hide', false );
            }
			function filetoBase64(myFileContents){  
                    let base64Mark = 'base64,';  
                    let dataStart = myFileContents.indexOf(base64Mark) + base64Mark.length;  
                    myFileContents = myFileContents.substring(dataStart);
                    return myFileContents
            }
            
            var blobToBase64 = function(blob, callback) {
                var reader = new FileReader();
                reader.onload = function() {
                    var dataUrl = reader.result;
                    var base64 = dataUrl.split(',')[1];
                    callback(base64);
                };
                reader.readAsDataURL(blob);
            };
            function getPDF(){
                showSpinner ();
                var HTML_Width = $("#lightnigCompContainer").width();
                var HTML_Height = $("#lightnigCompContainer").height();
                var top_left_margin = 50;
                var PDF_Width = HTML_Width+(top_left_margin*2);
                var PDF_Height = (PDF_Width*1.5)+(top_left_margin*2);
                var canvas_image_width = HTML_Width;
                var canvas_image_height = HTML_Height;
                
                var totalPDFPages = Math.ceil(HTML_Height/PDF_Height)-1;
                console.log ('totalPDFPages ' + totalPDFPages)
        
                html2canvas(document.getElementById('lightnigCompContainer'),{allowTaint:true}).then(function(canvas) {
                    canvas.getContext('2d');
                    
                    /*document
                        .getElementById('output')
                        .appendChild(canvas);*/
                    
                    console.log(canvas.height+"  "+canvas.width);
                    
                    
                    var imgData = canvas.toDataURL("image/jpeg", 1.0);
                    //console.log ('imgData' + imgData);

                    var pdf = new jsPDF('p', 'pt',  [PDF_Width, PDF_Height]);
                    pdf.addImage(imgData, 'JPG', top_left_margin, top_left_margin,canvas_image_width,canvas_image_height);
                    
                    
                    for (var i = 1; i <= totalPDFPages; i++) { 
                        pdf.addPage(PDF_Width, PDF_Height);
                        pdf.addImage(imgData, 'JPG', top_left_margin, -(PDF_Height*i)+(top_left_margin),canvas_image_width,canvas_image_height);
                    }
                    blobToBase64 (pdf.output('blob'), (base64) => {
                        // console.log ('file : ' + base64);
                    
                        // let content = filetoBase64 (base64);
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.KMA_PDFViewCntl.createContentVersion}',
                            base64,
                            (fileName + '_accountPlan.pdf'),
                            accountPlanId,
                            function(result, event){
                            
                                // console.log ('result :' + result);
                                // console.log ('event :' + event);
                                if (event.status) {
                                    
                                } else if (event.type === 'exception') {
                                    console.log ('Error : ' + event);
                                } else {
                                    console.log ('Error : ' + event);
                                }
                                
                                pdf.save(fileName + "_accountPlan.pdf");
                            
                                hideSpinner ();
                            }, 
                            {escape: false}
                        );
                    } );
                    
                });
            }  
            </script> 
        </body>
    </html>
</apex:page>